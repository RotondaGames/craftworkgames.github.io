"use strict";(self.webpackChunkmonogame_extended_website=self.webpackChunkmonogame_extended_website||[]).push([[2256],{7674:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"category","label":"MonoGame.Extended","items":[{"type":"link","label":"Introduction","href":"/docs/about/introduction","docId":"about/introduction","unlisted":false},{"type":"link","label":"Principles","href":"/docs/about/principles","docId":"about/principles","unlisted":false},{"type":"link","label":"Platforms","href":"/docs/about/platforms","docId":"about/platforms","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Installation (MonoGame)","href":"/docs/getting-started/installation-monogame","docId":"getting-started/installation-monogame","unlisted":false},{"type":"link","label":"Installation (KNI)","href":"/docs/getting-started/installation-kni","docId":"getting-started/installation-kni","unlisted":false},{"type":"link","label":"Installation (FNA)","href":"/docs/getting-started/installation-fna","docId":"getting-started/installation-fna","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Features","items":[{"type":"link","label":"Tweening","href":"/docs/features/tweening/","docId":"features/tweening/tweening","unlisted":false},{"type":"link","label":"Tiled","href":"/docs/features/tiled/","docId":"features/tiled/tiled","unlisted":false},{"type":"link","label":"Screen Management","href":"/docs/features/screen-management/","docId":"features/screen-management/screen-management","unlisted":false},{"type":"link","label":"Scene Graphs","href":"/docs/features/scene-graphs/","docId":"features/scene-graphs/scene-graphs","unlisted":false},{"type":"link","label":"Particles","href":"/docs/features/particles/","docId":"features/particles/particles","unlisted":false},{"type":"link","label":"Object Pooling","href":"/docs/features/object-pooling/","docId":"features/object-pooling/object-pooling","unlisted":false},{"type":"link","label":"Input","href":"/docs/features/input/","docId":"features/input/input","unlisted":false},{"type":"link","label":"Graphics","href":"/docs/features/graphics/","docId":"features/graphics/graphics","unlisted":false},{"type":"link","label":"Entities","href":"/docs/features/entities/","docId":"features/entities/entities","unlisted":false},{"type":"link","label":"Collections","href":"/docs/features/collections/","docId":"features/collections/collections","unlisted":false},{"type":"link","label":"Bitmap Font","href":"/docs/features/bitmap-font/","docId":"features/bitmap-font/bitmap-font","unlisted":false},{"type":"link","label":"Cameras","href":"/docs/features/cameras/","docId":"features/cameras/cameras","unlisted":false},{"type":"link","label":"Animations","href":"/docs/features/animations/","docId":"features/animations/animations","unlisted":false},{"type":"link","label":"Collision","href":"/docs/features/collision/","docId":"features/collision/collision","unlisted":false},{"type":"link","label":"ContentManager extensions","href":"/docs/features/contentManager-extensions/","docId":"features/contentManager-extensions/contentManager-extensions","unlisted":false},{"type":"link","label":"Serialization","href":"/docs/features/serialization/","docId":"features/serialization/serialization","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"about/introduction":{"id":"about/introduction","title":"Introduction","description":"Welcome","sidebar":"docs"},"about/platforms":{"id":"about/platforms","title":"Platforms","description":"Supported Platforms & 3D APIs","sidebar":"docs"},"about/principles":{"id":"about/principles","title":"Principles","description":"Extended principles are to help you manifest an early prototype for your ideas of a game and evolve it into a working game without throwing away the prototype.","sidebar":"docs"},"features/animations/animations":{"id":"features/animations/animations","title":"Animations","description":"The MonoGame.Extended.Animations library contains classes useful for animating 2D sprite.","sidebar":"docs"},"features/bitmap-font/bitmap-font":{"id":"features/bitmap-font/bitmap-font","title":"Bitmap Font","description":"This is an overview of the BitmapFont feature in MonoGame.Extended.  BitmapFonts are font files (.fnt) created using the AngelCode BMFont format. You can generate these files with tools like the BMFont tool or alternatives such as libGDX Hiero.","sidebar":"docs"},"features/cameras/cameras":{"id":"features/cameras/cameras","title":"Cameras","description":"Orthographic Camera","sidebar":"docs"},"features/collections/collections":{"id":"features/collections/collections","title":"Collections","description":"MonoGame.Extended contains Collections extensions to the C# collections that are useful for game programming.","sidebar":"docs"},"features/collision/collision":{"id":"features/collision/collision","title":"Collision","description":"The MonoGame.Extended.Collisions library contains a 2D grid-based collision system.","sidebar":"docs"},"features/contentManager-extensions/contentManager-extensions":{"id":"features/contentManager-extensions/contentManager-extensions","title":"ContentManager extensions","description":"ContentManager.OpenStream","sidebar":"docs"},"features/entities/entities":{"id":"features/entities/entities","title":"Entities","description":"The Entities package is a modern high performance Artemis based Entity Component System. Many of the features found in this implementation were inspired by artemis-odb. Although, many others were also studied during development. As you\'ll see the systems are designed to feel familar to MonoGame developers.","sidebar":"docs"},"features/graphics/graphics":{"id":"features/graphics/graphics","title":"Graphics","description":"The MonoGame.Extended.Graphics library contains extensions useful for generating dynamic geometry and batching draw calls.","sidebar":"docs"},"features/input/input":{"id":"features/input/input","title":"Input","description":"The MonoGame.Extended.Input provides extensions on top of the normal input classes.","sidebar":"docs"},"features/object-pooling/object-pooling":{"id":"features/object-pooling/object-pooling","title":"Object Pooling","description":"Object pooling is an optimization pattern. It\'s used to improve performance, in certain cases, by re-using objects instead of allocating memory for them on demand. In C/C++, one the things object pooling has to offer is a solution to avoid memory fragmentation. In C#, we don\'t have to worry about memory fragmentation thanks to garbage collection. However, garbage collection can be still be too expensive for certain parts of real-time applications, especially on mobile devices with slower CPUs and simpler garbage collectors. More details on object pooling here.","sidebar":"docs"},"features/particles/particles":{"id":"features/particles/particles","title":"Particles","description":"MonoGame.Extended.Particles is ported from the Mercury Particle Engine.","sidebar":"docs"},"features/scene-graphs/scene-graphs":{"id":"features/scene-graphs/scene-graphs","title":"Scene Graphs","description":"The SceneGraph is used to manage the spatial representation of objects. It is a tree structure in which the transformations of the parent nodes are applied to the child nodes.","sidebar":"docs"},"features/screen-management/screen-management":{"id":"features/screen-management/screen-management","title":"Screen Management","description":"The ScreenManager helps you to split your game into multiple GameScreens with their own Dispose(),","sidebar":"docs"},"features/serialization/serialization":{"id":"features/serialization/serialization","title":"Serialization","description":"MonoGame.Extended contains various serialization helpers that work with Newtonsoft Json.NET.","sidebar":"docs"},"features/tiled/tiled":{"id":"features/tiled/tiled","title":"Tiled","description":"Tiled Logo","sidebar":"docs"},"features/tweening/tweening":{"id":"features/tweening/tweening","title":"Tweening","description":"Inbetweening, or just tweening for short, allows you to generate values for position, size, color, opacity, etc in intermediate frames giving the illusion of animation.","sidebar":"docs"},"getting-started/contributing":{"id":"getting-started/contributing","title":"Contributing","description":"test"},"getting-started/installation-fna":{"id":"getting-started/installation-fna","title":"Installation (FNA)","description":"The following article details the steps necessary to get MonoGame.Extended installed and setup in your FNA project.  MonoGame.Extended can be used with either MonoGame, KNI, or FNA.  This article wil detail how to setup and install MonoGame.Extended with an existing FNA project.","sidebar":"docs"},"getting-started/installation-kni":{"id":"getting-started/installation-kni","title":"Installation (KNI)","description":"The following article details the steps necessary to get MonoGame.Extended installed and setup in your KNI project.  MonoGame.Extended can be used with either MonoGame, KNI, or KNI.  This article wil detail how to setup and install MonoGame.Extended with an existing KNI project.","sidebar":"docs"},"getting-started/installation-monogame":{"id":"getting-started/installation-monogame","title":"Installation (MonoGame)","description":"The following article details the steps necessary to get MonoGame.Extended installed and setup in your project.  MonoGame.Extended can be used with either MonoGame, KNI, or FNA.  This article wil detail how to setup and install MonoGame.Extended with an existing MonoGame project.","sidebar":"docs"},"getting-started/prototypes":{"id":"getting-started/prototypes","title":"Prototypes","description":"TODO"}}}}')}}]);