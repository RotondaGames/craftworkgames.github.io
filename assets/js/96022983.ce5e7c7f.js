"use strict";(self.webpackChunkmonogame_extended_website=self.webpackChunkmonogame_extended_website||[]).push([[876],{8966:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=t(4848),s=t(8453);const o={id:"contentReader",title:"ContentReader",sidebar_label:"ContentReader",description:"Extensions for the MonoGame ContentReader class."},a="ContentReader extensions",i={id:"features/content-extensions/contentReader",title:"ContentReader",description:"Extensions for the MonoGame ContentReader class.",source:"@site/docs/features/content-extensions/contentReader.md",sourceDirName:"features/content-extensions",slug:"/features/content-extensions/contentReader",permalink:"/docs/features/content-extensions/contentReader",draft:!1,unlisted:!1,editUrl:"https://github.com/craftworkgames/craftworkgames.github.io/tree/develop/docs/features/content-extensions/contentReader.md",tags:[],version:"current",frontMatter:{id:"contentReader",title:"ContentReader",sidebar_label:"ContentReader",description:"Extensions for the MonoGame ContentReader class."},sidebar:"docs",previous:{title:"ContentManager",permalink:"/docs/features/content-extensions/contentManager"},next:{title:"Entities",permalink:"/docs/features/entities/"}},d={},c=[{value:"ContentReader.GetGraphicsDevice",id:"contentreadergetgraphicsdevice",level:2},{value:"ContentReader.GetRelativeAssetName",id:"contentreadergetrelativeassetname",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.admonition,{title:"Up to date",type:"tip",children:(0,r.jsxs)(n.p,{children:["This page is ",(0,r.jsx)(n.strong,{children:"up to date"})," for MonoGame.Extended ",(0,r.jsx)(n.code,{children:"4.0.3"}),".  If you find outdated information, ",(0,r.jsx)(n.a,{href:"https://github.com/craftworkgames/craftworkgames.github.io/issues",children:"please open an issue"}),"."]})}),"\n",(0,r.jsx)(n.h1,{id:"contentreader-extensions",children:"ContentReader extensions"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"ContentReader"})," extensions help when writing your own content pipeline readers."]}),"\n",(0,r.jsx)(n.h2,{id:"contentreadergetgraphicsdevice",children:"ContentReader.GetGraphicsDevice"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"GraphicsDevice ContentReader.GetGraphicsDevice()"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"GetGraphicsDevice"})," returns the current ",(0,r.jsx)(n.code,{children:"GraphicsDevice"})," to help when loading content for the current display."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"public class MyTypeReader : ContentTypeReader<MyType> \n{\n    protected override MyType Read(ContentReader reader, MyType existingInstance)\n    {\n        var graphicsDevice = reader.GetGraphicsDevice();\n    }\n}\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["This ",(0,r.jsx)(n.code,{children:"ContentReader.GetGraphicsDevice"})," already exists in ",(0,r.jsx)(n.code,{children:"Monogame"})," and ",(0,r.jsx)(n.code,{children:"KNI"}),".  It does not exist in ",(0,r.jsx)(n.code,{children:"FNA"}),". This method remains in ",(0,r.jsx)(n.code,{children:"Monogame.Extended"})," for ",(0,r.jsx)(n.code,{children:"FNA"})," only."]})}),"\n",(0,r.jsx)(n.h2,{id:"contentreadergetrelativeassetname",children:"ContentReader.GetRelativeAssetName"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"string ContentReader.GetRelativeAssetName(string relativeName)"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"GetRelativeAssetName"})," helps when your content type loads a different type, and you want to know the name to give ",(0,r.jsx)(n.code,{children:"ContentManager.Load"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"public class MyTypeReader : ContentTypeReader<MyType> \n{\n    protected override MyType Read(ContentReader reader, MyType existingInstance)\n    {\n        var assetName = reader.GetRelativeAssetName(reader.ReadString());\n        var other = reader.ContentManager.Load<OtherType>(assetName);\n    }\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var r=t(6540);const s={},o=r.createContext(s);function a(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);