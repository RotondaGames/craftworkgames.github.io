"use strict";(self.webpackChunkmonogame_extended_website=self.webpackChunkmonogame_extended_website||[]).push([[7708],{1994:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>a});var t=o(4848),i=o(8453);const l={id:"collections",title:"Collections",sidebar_label:"Collections"},s=void 0,d={id:"features/collections/collections",title:"Collections",description:"MonoGame.Extended contains Collections extensions to the C# collections that are useful for game programming.",source:"@site/docs/features/collections/collections.md",sourceDirName:"features/collections",slug:"/features/collections/",permalink:"/docs/features/collections/",draft:!1,unlisted:!1,editUrl:"https://github.com/craftworkgames/craftworkgames.github.io/tree/develop/docs/features/collections/collections.md",tags:[],version:"current",frontMatter:{id:"collections",title:"Collections",sidebar_label:"Collections"}},c={},a=[{value:"Installation",id:"installation",level:2},{value:"Bag",id:"bag",level:2},{value:"Deque",id:"deque",level:2},{value:"keyedCollection",id:"keyedcollection",level:2},{value:"Object Pooling",id:"object-pooling",level:2},{value:"ObservableCollection",id:"observablecollection",level:2},{value:"ListExtensions",id:"listextensions",level:2},{value:"DictionaryExtensions",id:"dictionaryextensions",level:2}];function r(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"MonoGame.Extended"})," contains ",(0,t.jsx)(n.code,{children:"Collections"})," extensions to the C# collections that are useful for game programming."]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Collections"})," is part of ",(0,t.jsx)(n.a,{href:"https://www.nuget.org/packages/MonoGame.Extended",children:"MonoGame.Extended"})," and is distributed via a NuGet package. You can add the NuGet package to your C# project through your IDE of choice (Visual Studio, Xamarin Studio, Rider, etc) or through the Command Line Interface (CLI) using the dotnet command."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"dotnet add MonoGame.Extended\n"})}),"\n",(0,t.jsx)(n.h2,{id:"bag",children:"Bag"}),"\n",(0,t.jsxs)(n.p,{children:["A ",(0,t.jsx)(n.code,{children:"Bag"})," is an un-ordered array of items with fast ",(0,t.jsx)(n.code,{children:"Add"})," and ",(0,t.jsx)(n.code,{children:"Remove"})," properties."]}),"\n",(0,t.jsx)(n.p,{children:"It is much faster than an array when removing items, and takes less space than a linked list."}),"\n",(0,t.jsx)(n.p,{children:"Bag will resize itself only when it needs to."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"var bag = new Bag<int>(3);\nbag.Add(4);\nbag.Add(8);\nbag.Add(15);\n// bag is now [4, 8, 15]\n\nbag.Add(16); \n// bag is extended here, capacity is now 4 instead of 3 with items [4, 8, 15, 16]\n\nbag.Remove(1);\n// bag is now [4, 16, 15] with a capacity of 4\n"})}),"\n",(0,t.jsx)(n.h2,{id:"deque",children:"Deque"}),"\n",(0,t.jsxs)(n.p,{children:["Represents a collection of objects in which elements can be added to or removed either from the front or back. See ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Double-ended_queue",children:"double ended queue"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"var deque = new Deque<int>();\ndeque.AddToBack(1);\ndeque.AddToBack(2);\ndeque.AddToFront(4);\ndeque.AddToFront(5);\ndeque.AddToBack(3);\n\nwhile (deque.Count > 0)\n{\n    int item = deque.Pop();\n    Console.WriteLine(item);\n}\n\n"})}),"\n",(0,t.jsx)(n.p,{children:"Result"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"3\n2\n1\n4\n5\n"})}),"\n",(0,t.jsx)(n.h2,{id:"keyedcollection",children:"keyedCollection"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"KeyedCollection"})," is a wrapper around the ",(0,t.jsx)(n.code,{children:"Dictionary"})," class where the key is obtained by a delegate."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'var keyedCollection = new KeyedCollection<int, MyEntity>(e => e.Id);\nkeyedCollection.Add(new MyEntity {Id = 1, Name = "Player1"});\nkeyedCollection.Add(new MyEntity {Id = 2, Name = "Player2"});\n\nkeyedCollection.TryGetValue(1, out MyEntity entity); // gets Player1\n'})}),"\n",(0,t.jsx)(n.h2,{id:"object-pooling",children:"Object Pooling"}),"\n",(0,t.jsxs)(n.p,{children:["An ",(0,t.jsx)(n.code,{children:"ObjectPool<T>"})," allows reuse of memory for a group of items to avoid Garbage Collection.\nMore information is in the ",(0,t.jsx)(n.a,{href:"/docs/features/object-pooling/",children:"Object Pooling"})," documentation."]}),"\n",(0,t.jsx)(n.h2,{id:"observablecollection",children:"ObservableCollection"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ObservableCollection<T>"})," manages an ",(0,t.jsx)(n.code,{children:"IList<T>"})," of items firing ",(0,t.jsx)(n.code,{children:"ItemAdded"}),", ",(0,t.jsx)(n.code,{children:"ItemRemoved"}),", ",(0,t.jsx)(n.code,{children:"Clearing"}),", and ",(0,t.jsx)(n.code,{children:"Cleared"})," events when the collection is changed."]}),"\n",(0,t.jsx)(n.h2,{id:"listextensions",children:"ListExtensions"}),"\n",(0,t.jsxs)(n.p,{children:["Adds ",(0,t.jsx)(n.code,{children:"Shuffle(Random)"})," to all ",(0,t.jsx)(n.code,{children:"IList<>"})," classes."]}),"\n",(0,t.jsx)(n.h2,{id:"dictionaryextensions",children:"DictionaryExtensions"}),"\n",(0,t.jsxs)(n.p,{children:["Extends all ",(0,t.jsx)(n.code,{children:"Dictionary<>"})," classes with ",(0,t.jsx)(n.code,{children:"GetValueOrDefault(key, default)"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(r,{...e})}):r(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>d});var t=o(6540);const i={},l=t.createContext(i);function s(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);